AdvancedConfigure: { "IsOneWordPerLine": false, "IsUseSyl": false }
Comment: 0,0:00:00.00,0:00:00.00,Default,,0,0,0,code,function rounded_rect(line,pad,r) local w,h = line.extra.measured_w,line.extra.measured_h; local align = line.styleref.align - 1 local vertical = math.floor(align/3) local horizontal = align % 3 local x,y=0,0 local deviation = pad if vertical == 0 then y = y + deviation elseif vertical == 2 then y = y - deviation end if horizontal == 0 then x = x - deviation elseif horizontal == 2 then x = x + deviation end w=w+pad+pad h=h+pad+pad return string.format("m %d %d b %d %d %d %d %d %d l %d %d b %d %d %d %d %d %d l %d %d b %d %d %d %d %d %d l %d %d b %d %d %d %d %d %d ", x+r,y, x,y,x,y,x,y+r, x,y+h-r, x,y+h,x,y+h,x+r,y+h, x+w-r,y+h, x+w,y+h,x+w,y+h,x+w,y+h-r, x+w,y+r, x+w,y,x+w,y,x+w-r,y) end
Comment: 0,0:00:00.00,0:00:00.00,Default,,0,0,0,code,function rounded_rect_with_pos(line,pad,r,genbox) local align= line.styleref.align;  if genbox then return string.format("{\\an%d\\p1\\pos(%f,%f)\\1c&H[BackgroundColour,33CCFF]&\\blur2\\bord0\\shad0}%s ",align,line.x,line.y,rounded_rect(line,pad,r)) else return string.format("{\\an%d\\pos(%f,%f)\\fscx100\\fscy100\\bord3\\shad0} ",align,line.x,line.y) end end
Comment: 0,0:00:00.00,0:00:00.00,Default,,0,0,0,template line noblank,!rounded_rect_with_pos(line,[PaddingSizeInt,10],[CornersSizeInt,20],true)!
Comment: 0,0:00:00.00,0:00:00.00,Default,,0,0,0,template line noblank,!rounded_rect_with_pos(line,[PaddingSizeInt,10],[CornersSizeInt,20],false)!